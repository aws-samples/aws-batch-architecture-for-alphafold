variables:
  AWS_CREDS_TARGET_ROLE: arn:aws:iam::264410369698:role/AWS-AlphaFold-GitLab-CI-Role
  AWS_DEFAULT_REGION: us-east-1
  DEPLOYMENT_BUCKET_NAME: aws-batch-architecture-for-alphafold-public-artifacts
  DEV_BUCKET_PREFIX: dev
  MAIN_BUCKET_PREFIX: main
  DEV_DOWNLOAD_ECR: public.ecr.aws/alphafold-on-aws/download-dev:latest
  DEV_FOLDING_ECR: public.ecr.aws/alphafold-on-aws/folding-dev:latest
  MAIN_DOWNLOAD_ECR: public.ecr.aws/alphafold-on-aws/download-main:latest
  MAIN_FOLDING_ECR: public.ecr.aws/alphafold-on-aws/folding-main:latest


default:
  image: public.ecr.aws/amazonlinux/amazonlinux:latest

include:
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - lint
  - deploy-dev
  - test
  - deploy-main

################################
# .pre
################################

cfn-lint:
  image: python:3.8
  stage: lint
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install cfn-lint
    - pip freeze
  script:
    - cfn-lint -I infrastructure/*cfn*.yaml

cfn-nag:
  image: stelligent/cfn_nag
  stage: lint
  script:
    - cfn_nag_scan --input-path infrastructure/*.yaml

secret_detection:
  stage: lint
  variables:
    CI_DEBUG_TRACE: "true"

################################
# deploy-dev
################################

push-to-s3-dev:
  stage: deploy-dev
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - apt update -y && apt install -y awscli zip
  script:
    - zip -r aws-alphafold.zip . -x .\*/\* -x .gitlab-ci.yml
    - aws s3 cp aws-alphafold.zip s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/aws-alphafold.zip
    - aws cloudformation package --template-file infrastructure/alphafold-cfn-root.yaml --output-template infrastructure/alphafold-cfn-packaged.yaml --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-prefix $DEV_BUCKET_PREFIX --region $AWS_DEFAULT_REGION
    - aws s3 cp infrastructure/alphafold-cfn-packaged.yaml s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/alphafold-cfn-packaged.yaml
    # - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/alphafold-on-aws
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${DEV_DOWNLOAD_ECR}\":{\"auth\":\"AWS\":\"$(aws ecr-public get-login-password --region us-east-1)" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json   
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/download/Dockerfile"
      --destination "${DEV_DOWNLOAD_ECR}"
    - echo "{\"auths\":{\"${DEV_FOLDING_ECR}\":{\"auth\":\"AWS\":\"$(aws ecr-public get-login-password --region us-east-1)" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json   
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/folding/Dockerfile"
      --destination "${DEV_FOLDING_ECR}"    
    # - docker build -t $DEV_DOWNLOAD_ECR docker/download
    # - docker push $DEV_DOWNLOAD_ECR
    # - docker build -t $DEV_FOLDING_ECR docker/folding
    # - docker push $DEV_FOLDING_ECR    
  artifacts:
    paths:
      - infrastructure/alphafold-cfn-packaged.yaml
    expire_in: 1 day
  only:
    - dev

################################
# test
################################

test_cfn:
  image: python:3.8
  stage: test
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install taskcat
    - pip freeze
  script:
    - taskcat test run
  only:
    - dev

################################
# deploy-main
################################

push-to-s3-main:
  stage: deploy-main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]  
  before_script:
    - apt update -y && apt install -y awscli zip
  script:
    - aws s3 cp s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/aws-alphafold.zip s3://$DEPLOYMENT_BUCKET_NAME/$MAIN_BUCKET_PREFIX/aws-alphafold.zip
    - aws cloudformation package --template-file infrastructure/alphafold-cfn-root.yaml --output-template infrastructure/alphafold-cfn-packaged.yaml --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-prefix $MAIN_BUCKET_PREFIX --region $AWS_DEFAULT_REGION
    - aws s3 cp infrastructure/alphafold-cfn-packaged.yaml s3://$DEPLOYMENT_BUCKET_NAME/$MAIN_BUCKET_PREFIX/alphafold-cfn-packaged.yaml
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${MAIN_DOWNLOAD_ECR}\":{\"auth\":\"AWS\":\"$(aws ecr-public get-login-password --region us-east-1)" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json   
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/download/Dockerfile"
      --destination "${MAIN_DOWNLOAD_ECR}"
    - echo "{\"auths\":{\"${MAIN_FOLDING_ECR}\":{\"auth\":\"AWS\":\"$(aws ecr-public get-login-password --region us-east-1)" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json   
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/folding/Dockerfile"
      --destination "${MAIN_FOLDING_ECR}"       
    # - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/alphafold-on-aws
    # - docker build -t $MAIN_DOWNLOAD_ECR docker/download
    # - docker push $MAIN_DOWNLOAD_ECR
    # - docker build -t MAIN_FOLDING_ECR docker/folding
    # - docker push $MAIN_FOLDING_ECR        
  only:
    - main
