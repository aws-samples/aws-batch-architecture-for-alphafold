variables:
  AWS_CREDS_TARGET_ROLE: arn:aws:iam::264410369698:role/AWS-AlphaFold-GitLab-CI-Role
  AWS_DEFAULT_REGION: us-east-1
  DEPLOYMENT_BUCKET_NAME: aws-batch-architecture-for-alphafold-public-artifacts
  DEV_BUCKET_PREFIX: dev
  PROD_BUCKET_PREFIX: prod
  DEV_DOWNLOAD_ECR: public.ecr.aws/alphafold-on-aws/download-dev:latest
  DEV_FOLDING_ECR: public.ecr.aws/alphafold-on-aws/folding-dev:latest
  PROD_DOWNLOAD_ECR: public.ecr.aws/alphafold-on-aws/download:latest
  PROD_FOLDING_ECR: public.ecr.aws/alphafold-on-aws/folding:latest


default:
  image: public.ecr.aws/amazonlinux/amazonlinux:latest

include:
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - lint
  - deploy-dev
  - test
  - deploy-prod

################################
# .pre
################################

cfn-lint:
  image: python:3.8
  stage: lint
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install cfn-lint
    - pip freeze
  script:
    - cfn-lint -I infrastructure/*cfn*.yaml

cfn-nag:
  image: stelligent/cfn_nag
  stage: lint
  script:
    - cfn_nag_scan --input-path infrastructure/*.yaml

secret_detection:
  stage: lint
  variables:
    CI_DEBUG_TRACE: "true"

################################
# deploy-dev
################################

push-to-s3-dev:
  stage: deploy-dev
  before_script:
    - yum update -y && yum install -y awscli zip
  script:
    - zip -r aws-alphafold.zip . -x .\*/\* -x .gitlab-ci.yml
    - aws s3 cp aws-alphafold.zip s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/aws-alphafold.zip
    - aws cloudformation package --template-file infrastructure/alphafold-cfn-root.yaml --output-template infrastructure/alphafold-cfn-packaged.yaml --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-prefix $DEV_BUCKET_PREFIX --region $AWS_DEFAULT_REGION
    - aws s3 cp infrastructure/alphafold-cfn-packaged.yaml s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/alphafold-cfn-packaged.yaml
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/alphafold-on-aws
    - docker build -t download-dev docker/download
    - docker tag download-dev:latest $DEV_DOWNLOAD_ECR
    - docker push $DEV_DOWNLOAD_ECR
    - docker build -t folding-dev docker/folding
    - docker tag folding-dev:latest $DEV_FOLDING_ECR
    - docker push $DEV_FOLDING_ECR    
  artifacts:
    paths:
      - infrastructure/alphafold-cfn-packaged.yaml
    expire_in: 1 day
  only:
    - dev

################################
# test
################################

test_cfn:
  image: python:3.8
  stage: test
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install taskcat
    - pip freeze
  script:
    - taskcat test run
  only:
    - dev

################################
# deploy-prod
################################

push-to-s3-main:
  stage: deploy-prod
  before_script:
    - yum update -y && yum install -y awscli zip
  script:
    - aws s3 cp s3://$DEPLOYMENT_BUCKET_NAME/$DEV_BUCKET_PREFIX/aws-alphafold.zip s3://$DEPLOYMENT_BUCKET_NAME/$PROD_BUCKET_PREFIX/aws-alphafold.zip
    - aws cloudformation package --template-file infrastructure/alphafold-cfn-root.yaml --output-template infrastructure/alphafold-cfn-packaged.yaml --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-prefix $PROD_BUCKET_PREFIX --region $AWS_DEFAULT_REGION
    - aws s3 cp infrastructure/alphafold-cfn-packaged.yaml s3://$DEPLOYMENT_BUCKET_NAME/$PROD_BUCKET_PREFIX/alphafold-cfn-packaged.yaml
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/alphafold-on-aws
    - docker build -t download-prod docker/download
    - docker tag download-prod:latest $PROD_DOWNLOAD_ECR
    - docker push $PROD_DOWNLOAD_ECR
    - docker build -t folding-prod docker/folding
    - docker tag folding-prod:latest $PROD_FOLDING_ECR
    - docker push $PROD_FOLDING_ECR        
  only:
    - main
