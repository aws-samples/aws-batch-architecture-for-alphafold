# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates a stack for running Alphafold on AWS Batch.
Parameters:
  AlphaFoldVersion:
    Description: AlphaFold release to include as part of the job container
    Type: String
    Default: v2.1.2
    AllowedValues:
      - v2.1.2
  ApplicationName:
    Description: Name of the application, if applicable
    Type: String
    Default: "Unknown"
  DefaultSecurityGroupID:
    Description: The default security group ID for the VPC
    Type: String
  FileSystemId:
    Description: ID of the FSx for the Lustre file system
    Type: String
  FileSystemMountName:
    Description: Mount name for the Lustre file system
    Type: String
  LaunchSageMakerNotebook:
    Type: String 
    Default: Y
    Description: Create a SageMaker Notebook Instance.
    AllowedValues: [Y, N]
  Subnet:
    Description: Subnet ID for the file system.
    Type: String    
  Environment:
    Description: Leave this as "main" unless you are testing a pre-release versions of this architecture.
    Type: String
    Default: main
    AllowedValues:
      - main
      - dev

Conditions:
  createSageMakerNotebook: !Equals [ !Ref 'LaunchSageMakerNotebook', 'Y' ]

Resources:
  ##################################################
  # S3
  ##################################################

  CodePipelineS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: Private
      LoggingConfiguration:
        LogFilePrefix: code-pipeline-logs
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId
    DeletionPolicy: Retain
    UpdateReplacePolicy : Retain

  S3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Ref CodePipelineS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource: 
              - !Sub arn:aws:s3:::${CodePipelineS3Bucket}/*
            Principal: 
              AWS: !Ref AWS::AccountId
          - Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation  
              - s3:PutBucketPolicy
            Effect: Allow
            Resource: 
              - !GetAtt CodePipelineS3Bucket.Arn
            Principal: 
              AWS: !Ref AWS::AccountId

  ##################################################
  # EC2 Launch Template
  ##################################################

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: "Required service policies to support running Alphafold on AWS Batch"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: !Ref ApplicationName
      Roles:
        - !Ref EC2InstanceRole

  InstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref ApplicationName
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: "/dev/xvda"
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              VolumeSize: 50
              VolumeType: "gp2"
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        TagSpecifications:
          - ResourceType: "instance"
            Tags:
              - Key: Application
                Value: !Ref ApplicationName
              - Key: StackId
                Value: !Ref AWS::StackId
        UserData:
          Fn::Base64:
            Fn::Join:
              [
                "",
                [
                  "MIME-Version: 1.0\n",
                  "Content-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n",
                  "\n",
                  "--==MYBOUNDARY==\n",
                  "Content-Type: text/cloud-config; charset=\"us-ascii\"\n",
                  "\n",
                  "runcmd:\n",
                  "- file_system_id_01=",
                  !Ref FileSystemId,
                  "\n",
                  "- region=",
                  !Ref AWS::Region,
                  "\n",
                  "- fsx_directory=/fsx\n",
                  "- fsx_mount_name=",
                  !Ref FileSystemMountName,
                  "\n",
                  "- amazon-linux-extras install -y lustre2.10\n",
                  "- mkdir -p ${fsx_directory}\n",
                  "- mount -t lustre ${file_system_id_01}.fsx.${region}.amazonaws.com@tcp:/${fsx_mount_name} ${fsx_directory}\n",
                  "\n",
                  "--==MYBOUNDARY==--",
                ],
              ]

  ##################################################
  # Container Services
  ##################################################
  CodeRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      Code:
        BranchName: "main"
        S3:
          Bucket: "aws-hcls-ml"
          Key: !Sub 'blog_post_support_materials/aws-alphafold/${Environment}/aws-alphafold.zip'
      RepositoryDescription: Code for running Alphafold on AWS
      RepositoryName:
        !Join [
          "-",
          [
            "AWS-Alphafold",
            "code-repo",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  FoldingContainerRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageScanningConfiguration:
        ScanOnPush: true
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId
    DeletionPolicy: Retain
    UpdateReplacePolicy : Retain

  DownloadContainerRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageScanningConfiguration:
        ScanOnPush: true
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId
    DeletionPolicy: Retain
    UpdateReplacePolicy : Retain    

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: "Required service policies to support building AWS-Alphafold container"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:logs",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          "log-group:/aws/codebuild/AWS-Alphafold*",
                        ],
                      ]
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Join [
                      "-",
                      ["arn:aws:s3:::codepipeline", !Ref AWS::Region, "*"],
                    ]
                  - !Join ["", [!GetAtt CodePipelineS3Bucket.Arn, "*"]]
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:codecommit",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          !GetAtt CodeRepository.Name,
                        ],
                      ]
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:s3:::codebuild",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          "report-group/AWS-Alphafold*",
                        ],
                      ]
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  EncryptionKey:
    Type: "AWS::KMS::Key"
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: 
                Fn::Join: [":", ["arn:aws:iam:", !Ref AWS::AccountId, "root"]]
            Action: 
              [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ]
            Resource: "*"
          - Sid: Enable CodeBuild Encryption
            Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildRole.Arn
            Action:
              [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ]
            Resource: "*"
          - Sid: Enable CloudWatch Logs Encryption
            Effect: Allow
            Principal:
              Service: "logs.amazonaws.com"
            Action:
              [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ]
            Resource: "*"            
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: Build Docker container for Alphafold execution on AWS Batch
      EncryptionKey: !Ref EncryptionKey
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: FOLDING_IMAGE_TAG
            Value: latest
          - Name: FOLDING_IMAGE_REPO_NAME
            Value: !Ref FoldingContainerRegistry
          - Name: AF_VERSION
            Value: !Ref AlphaFoldVersion
          - Name: DOWNLOAD_IMAGE_TAG
            Value: latest
          - Name: DOWNLOAD_IMAGE_REPO_NAME
            Value: !Ref DownloadContainerRegistry            
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ResourceAccessRole: !GetAtt CodeBuildRole.Arn
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        BuildSpec: infrastructure/buildspec.yml
        GitCloneDepth: 1
        Location: !GetAtt CodeRepository.CloneUrlHttp
        Type: CODECOMMIT
      SourceVersion: refs/heads/main
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: "Required service policies to support running AWS-Alphafold build pipeline"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: codePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: !GetAtt CodeRepository.Arn
                Effect: Allow
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub arn:aws:s3:::${CodePipelineS3Bucket}/*
                Effect: Allow
              - Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: !GetAtt CodePipelineS3Bucket.Arn
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: !GetAtt CodeBuildProject.Arn
                Effect: Allow
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                Resource: !GetAtt FoldingContainerRegistry.Arn
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodePipelineS3Bucket
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !GetAtt CodeRepository.Name
                BranchName: main
                PollForSourceChanges: "false"
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref AWS::Region
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              Namespace: BuildVariables
              OutputArtifacts:
                - Name: BuildArtifact
              Region: !Ref AWS::Region
              RunOrder: 2
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  ##################################################
  # Batch Environment
  ##################################################

  PrivateCPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        InstanceRole: !Ref InstanceProfile
        InstanceTypes:
          - m5
          - r5
          - c5
        LaunchTemplate:
          LaunchTemplateId: !Ref InstanceLaunchTemplate
          Version: $Latest
        MaxvCpus: 256
        MinvCpus: 0
        SecurityGroupIds:
          - !Ref DefaultSecurityGroupID
        Subnets:
          - !Ref Subnet
        Type: EC2
      State: ENABLED
      Type: MANAGED
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId

  PrivateGPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        InstanceRole: !Ref InstanceProfile
        InstanceTypes:
          - g4dn
        LaunchTemplate:
          LaunchTemplateId: !Ref InstanceLaunchTemplate
          Version: $Latest
        MaxvCpus: 256
        MinvCpus: 0
        SecurityGroupIds:
          - !Ref DefaultSecurityGroupID
        Subnets:
          - !Ref Subnet
        Type: EC2
      State: ENABLED
      Type: MANAGED
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId

  PrivateCPUJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref PrivateCPUComputeEnvironment
          Order: 1
      Priority: 10
      State: ENABLED
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId 

  PrivateGPUJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref PrivateGPUComputeEnvironment
          Order: 1
      Priority: 10
      State: ENABLED
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId

  CPUFoldingJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      ContainerProperties:
        Command:
          - "-c echo hello, world"    
        Image:
          !Join [":", [!GetAtt FoldingContainerRegistry.RepositoryUri, "latest"]]
        LogConfiguration:
          LogDriver: awslogs
        MountPoints:
          - ContainerPath: /mnt/bfd_database_path
            ReadOnly: True
            SourceVolume: bfd        
          - ContainerPath: /mnt/mgnify_database_path
            ReadOnly: True
            SourceVolume: mgnify            
          - ContainerPath: /mnt/pdb70_database_path
            ReadOnly: True
            SourceVolume: pdb70
          - ContainerPath: /mnt/template_mmcif_dir
            ReadOnly: True
            SourceVolume: pdb_mmcif
          - ContainerPath: /mnt/obsolete_pdbs_path
            ReadOnly: True
            SourceVolume: pdb_mmcif
          - ContainerPath: /mnt/pdb_seqres_database_path
            ReadOnly: True
            SourceVolume: pdb_seqres            
          - ContainerPath: /mnt/small_bfd_database_path
            ReadOnly: True
            SourceVolume: small_bfd
          - ContainerPath: /mnt/uniclust30_database_path
            ReadOnly: True
            SourceVolume: uniclust30
          - ContainerPath: /mnt/uniprot_database_path
            ReadOnly: True
            SourceVolume: uniprot     
          - ContainerPath: /mnt/uniref90_database_path
            ReadOnly: True
            SourceVolume: uniref90                   
          - ContainerPath: /mnt/data_dir
            ReadOnly: True
            SourceVolume: data
          - ContainerPath: /mnt/output
            ReadOnly: False
            SourceVolume: output
        ResourceRequirements:
          - Type: VCPU
            Value: 8
          - Type: MEMORY
            Value: 16000
        Volumes:
          - Name: bfd
            Host:
              SourcePath: /fsx/bfd
          - Name: mgnify
            Host:
              SourcePath: /fsx/mgnify    
          - Name: pdb70
            Host:
              SourcePath: /fsx/pdb70   
          - Name: pdb_mmcif
            Host:
              SourcePath: /fsx/pdb_mmcif  
          - Name: pdb_seqres
            Host:
              SourcePath: /fsx/pdb_seqres  
          - Name: small_bfd
            Host:
              SourcePath: /fsx/small_bfd
          - Name: uniclust30
            Host:
              SourcePath: /fsx/uniclust30
          - Name: uniprot
            Host:
              SourcePath: /fsx/uniprot                                                                                               
          - Name: uniref90
            Host:
              SourcePath: /fsx/uniref90   
          - Name: data
            Host:
              SourcePath: /    
          - Name: output
            Host:
              SourcePath: /tmp/alphafold
      PlatformCapabilities:
        - EC2
      PropagateTags: true
      RetryStrategy:
        Attempts: 3
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId
      Type: container       

  GPUFoldingJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      ContainerProperties:
        Command:
          - "nvidia-smi"
        Environment:
          - Name: TF_FORCE_UNIFIED_MEMORY
            Value: 1
          - Name: XLA_PYTHON_CLIENT_MEM_FRACTION
            Value: 4.0
        Image:
          !Join [":", [!GetAtt FoldingContainerRegistry.RepositoryUri, "latest"]]
        LogConfiguration:
          LogDriver: awslogs
        MountPoints:
          - ContainerPath: /mnt/bfd_database_path
            ReadOnly: True
            SourceVolume: bfd        
          - ContainerPath: /mnt/mgnify_database_path
            ReadOnly: True
            SourceVolume: mgnify            
          - ContainerPath: /mnt/pdb70_database_path
            ReadOnly: True
            SourceVolume: pdb70
          - ContainerPath: /mnt/template_mmcif_dir
            ReadOnly: True
            SourceVolume: pdb_mmcif
          - ContainerPath: /mnt/obsolete_pdbs_path
            ReadOnly: True
            SourceVolume: pdb_mmcif
          - ContainerPath: /mnt/pdb_seqres_database_path
            ReadOnly: True
            SourceVolume: pdb_seqres            
          - ContainerPath: /mnt/small_bfd_database_path
            ReadOnly: True
            SourceVolume: small_bfd
          - ContainerPath: /mnt/uniclust30_database_path
            ReadOnly: True
            SourceVolume: uniclust30
          - ContainerPath: /mnt/uniprot_database_path
            ReadOnly: True
            SourceVolume: uniprot     
          - ContainerPath: /mnt/uniref90_database_path
            ReadOnly: True
            SourceVolume: uniref90                   
          - ContainerPath: /mnt/data_dir
            ReadOnly: True
            SourceVolume: data
          - ContainerPath: /mnt/output
            ReadOnly: False
            SourceVolume: output
        ResourceRequirements:
          - Type: VCPU
            Value: 8
          - Type: MEMORY
            Value: 16000
          - Type: GPU
            Value: 1
        Volumes:
          - Name: bfd
            Host:
              SourcePath: /fsx/bfd
          - Name: mgnify
            Host:
              SourcePath: /fsx/mgnify    
          - Name: pdb70
            Host:
              SourcePath: /fsx/pdb70   
          - Name: pdb_mmcif
            Host:
              SourcePath: /fsx/pdb_mmcif  
          - Name: pdb_seqres
            Host:
              SourcePath: /fsx/pdb_seqres  
          - Name: small_bfd
            Host:
              SourcePath: /fsx/small_bfd
          - Name: uniclust30
            Host:
              SourcePath: /fsx/uniclust30
          - Name: uniprot
            Host:
              SourcePath: /fsx/uniprot                                                                                               
          - Name: uniref90
            Host:
              SourcePath: /fsx/uniref90   
          - Name: data
            Host:
              SourcePath: /    
          - Name: output
            Host:
              SourcePath: /tmp/alphafold
      PlatformCapabilities:
        - EC2
      PropagateTags: true
      RetryStrategy:
        Attempts: 3
      Tags:
        Application: !Ref ApplicationName
        StackId: !Ref AWS::StackId
      Type: container

  CPUDownloadJobDefinition:
      Type: AWS::Batch::JobDefinition
      Properties:
        ContainerProperties:
          Command:
            - "-c echo hello, world"
          Image:
            !Join [":", [!GetAtt DownloadContainerRegistry.RepositoryUri, "latest"]]
          LogConfiguration:
            LogDriver: awslogs
          MountPoints:
            - ContainerPath: /fsx
              ReadOnly: False
              SourceVolume: fsx
          Privileged: False
          ResourceRequirements:
            - Type: VCPU
              Value: 4
            - Type: MEMORY
              Value: 16000
          Volumes:
            - Name: fsx
              Host:
                SourcePath: /fsx
        PlatformCapabilities:
          - EC2
        PropagateTags: true
        RetryStrategy:
          Attempts: 3
        Tags:
          Application: !Ref ApplicationName
          StackId: !Ref AWS::StackId
        Type: container      

  ##################################################
  # SageMaker Notebook Instance
  ##################################################

  AlphafoldNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Condition: createSageMakerNotebook
    Properties:
      DirectInternetAccess: Enabled
      InstanceType: ml.c4.2xlarge
      DefaultCodeRepository:  !GetAtt CodeRepository.CloneUrlHttp
      KmsKeyId: !GetAtt EncryptionKey.Arn
      RoleArn: !GetAtt SageMakerNotebookExecutionRole.Arn
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - !Ref DefaultSecurityGroupID
      Tags:
        - Key:  Application
          Value:  !Ref ApplicationName
        - Key:  StackId
          Value:  !Ref AWS::StackId
  SageMakerNotebookExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSageMakerFullAccess"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AWSCodeCommitReadOnly"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AWSCloudFormationReadOnlyAccess"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AWSBatchFullAccess"
